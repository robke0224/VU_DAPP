{"mappings":"AAAA,MAAM,cAAc;IAClB;QACI,UAAU,EAAE;QACZ,mBAAmB;QACnB,QAAQ;IACZ;IACA;QACI,UAAU,EAAE;QACZ,QAAQ;QACR,WAAW;YACP;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,mBAAmB;QACnB,QAAQ;QACR,YAAY;IAChB;IACA;QACI,UAAU;YACN;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,WAAW;YACP;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;YACA;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,mBAAmB;QACnB,QAAQ;QACR,YAAY;IAChB;IACA;QACI,UAAU;YACN;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;QACR,WAAW;IACf;IACA;QACI,UAAU,EAAE;QACZ,QAAQ;QACR,WAAW;YACP;gBACI,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACZ;SACH;QACD,mBAAmB;QACnB,QAAQ;IACZ;CACD;AAED,MAAM,kBAAkB;AAExB,IAAI;AACJ,IAAI;AAEJ,iBAAiB;AACjB,SAAS,cAAc,CAAC,kBAAkB,gBAAgB,CAAC,SAAS;IAClE,IAAI,OAAO,QAAQ,EAAE;QACjB,OAAO,IAAI,KAAK,OAAO,QAAQ;QAC/B,MAAM,OAAO,QAAQ,CAAC,MAAM;QAC5B,MAAM,WAAW,MAAM,KAAK,GAAG,CAAC,WAAW;QAC3C,SAAS,cAAc,CAAC,eAAe,SAAS,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,EAAE;QAC9E,kBAAkB,IAAI,KAAK,GAAG,CAAC,QAAQ,CAAC,aAAa;QACrD;IACJ,OACI,MAAM;AAEZ;AAEA,yBAAyB;AACzB,eAAe;IACb,IAAI,CAAC,iBAAiB;QAClB,MAAM;QACN;IACJ;IAEA,QAAQ,GAAG,CAAC;IACZ,MAAM,UAAU,MAAM,gBAAgB,OAAO,CAAC,mBAAmB,GAAG,IAAI;IACxE,QAAQ,GAAG,CAAC,sBAAsB;IAClC,MAAM,aAAa,SAAS,cAAc,CAAC;IAC3C,WAAW,SAAS,GAAG;IACvB,QAAQ,OAAO,CAAC,CAAA;QACZ,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,SAAS,WAAW,GAAG,CAAC,WAAW,EAAE,UAAU;QAC/C,WAAW,WAAW,CAAC;IAC3B;AACF;AAEA,aAAa;AACb,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,SAAS;IAC9D,MAAM,WAAW,SAAS,cAAc,CAAC,aAAa,KAAK;IAC3D,IAAI,CAAC,UAAU;QACX,MAAM;QACN;IACJ;IAEA,MAAM,WAAW,MAAM,KAAK,GAAG,CAAC,WAAW;IAC3C,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,CAAC,OAAO;IAC5C,MAAM,gBAAgB,OAAO,CAAC,SAAS,CAAC,UAAU,IAAI,CAAC;QACnD,MAAM,QAAQ,CAAC,EAAE;QACjB,OAAO;IACX;IAEA,MAAM;IACN;AACF","sources":["script.js"],"sourcesContent":["const contractABI = [\n  {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n  },\n  {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n          {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n          }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n  },\n  {\n      \"inputs\": [\n          {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"name\": \"tickets\",\n      \"outputs\": [\n          {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n          },\n          {\n              \"internalType\": \"address\",\n              \"name\": \"owner\",\n              \"type\": \"address\"\n          }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n  },\n  {\n      \"inputs\": [\n          {\n              \"internalType\": \"uint256\",\n              \"name\": \"_index\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"name\": \"buyTicket\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\",\n      \"payable\": true\n  },\n  {\n      \"inputs\": [],\n      \"name\": \"getAvailableTickets\",\n      \"outputs\": [\n          {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"\",\n              \"type\": \"uint256[]\"\n          }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n  }\n];\n\nconst contractAddress = \"0x1Ec038A4a0253c88c95953002fA11881925C37d1\";\n\nlet web3;\nlet ticketsContract;\n\n// Connect wallet\ndocument.getElementById(\"connect-wallet\").addEventListener(\"click\", async () => {\n  if (window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      const accounts = await web3.eth.getAccounts();\n      document.getElementById(\"wallet-info\").innerText = `Connected: ${accounts[0]}`;\n      ticketsContract = new web3.eth.Contract(contractABI, contractAddress);\n      loadAvailableTickets();\n  } else {\n      alert(\"Please install MetaMask to use this DApp.\");\n  }\n});\n\n// Load available tickets\nasync function loadAvailableTickets() {\n  if (!ticketsContract) {\n      alert(\"Please connect your wallet first.\");\n      return;\n  }\n\n  console.log(\"Fetching available tickets...\");\n  const tickets = await ticketsContract.methods.getAvailableTickets().call();\n  console.log(\"Available tickets:\", tickets);\n  const ticketList = document.getElementById(\"available-tickets\");\n  ticketList.innerHTML = \"\";\n  tickets.forEach(ticketId => {\n      const listItem = document.createElement(\"li\");\n      listItem.textContent = `Ticket ID: ${ticketId}`;\n      ticketList.appendChild(listItem);\n  });\n}\n\n// Buy ticket\ndocument.getElementById(\"buy-ticket\").addEventListener(\"click\", async () => {\n  const ticketId = document.getElementById(\"ticket-id\").value;\n  if (!ticketId) {\n      alert(\"Please enter a valid ticket ID.\");\n      return;\n  }\n\n  const accounts = await web3.eth.getAccounts();\n  const ticketPrice = web3.utils.toWei(\"0.1\", \"ether\");\n  await ticketsContract.methods.buyTicket(ticketId).send({\n      from: accounts[0],\n      value: ticketPrice,\n  });\n\n  alert(\"Ticket purchased successfully!\");\n  loadAvailableTickets();\n});\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}